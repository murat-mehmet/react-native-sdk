/**
 * TPushNotificationPermissionType is used to define the type of the push notification permission request parameters.
 */
export type TRequestPushNotificationPermission = {
  /**
   * deviceToken is the token that is generated by the device.
   * It is used to send push notifications to the device.
   */
  deviceToken: string;
  /**
   * userId is the id of the user.
   * It is used to send push notifications to the user.
   */
  userId: string;
};

/**
 * TFirePushNotification is used to define the type of the push notification permiossion handler types..
 */
export type TFirePushNotification = TRequestPushNotificationPermission & {
  /**
   * type is the type of the push notification permission handler.
   */
  type: string;
  /**
   * instanceId is the id of the related campaign.
   * @example
   * "sgm_123142","scn_123123"
   */
  instanceId: string;
  /**
   * productId is the id of the related product.
   * @example
   * "prd_123142","prd_123123"
   */
  productId: string;
};

/**
 * TRequestPushNotificationPermissionPayload is used to define the type of the push notification permission request payload.
 */
export type TRequestPushNotificationPermissionPayload =
  TRequestPushNotificationPermission & {
    /**
     * providerType is the type of the push notification provider.
     * @example
     * "FIREBASE","APNS"
     * @default
     * "FIREBASE"
     * @optional
     */
    providerType?: 'FIREBASE' | 'APNS';
    /**
     * os is the type of the operating system.
     * @example
     * "IOS","ANDROID"
     */
    os: string;
  };

export type TFirePushNotificationInteraction = {
  instanceId: string;
} & {
  type: 'VIEW' | 'CLICK';
};

/**
 *  TNotificationConfigs is used to define the type of the notification configs.
 */
export interface TNotificationConfigs {
  notificationConfigs: {
    /**
     * title is the title of the notification.
     * @example
     * "Notification Title"
     */
    title: string;
    /**
     * body is the body of the notification.
     * @example
     * "Notification Body"
     */
    body: string;
    ios?: {
      foregroundPresentationOptions?: {
        /**
         * badge is the badge of the notification.
         * @example
         * true,false
         * @default
         * true
         */
        badge: boolean;
        /**
         * sound is the sound of the notification.
         * @example
         * true,false
         * @default
         * true
         */
        sound: boolean;
        /**
         * alert is the alert of the notification.
         * @example
         * true,false
         * @default
         * true
         */
        banner: boolean;
        /**
         * list is the list of the notification.
         * @example
         * true,false
         * @default
         * true
         */
        list: boolean;
      };
      /**
       * attachments is the attachments of the notification.
       * @example
       * [
       *  {
       *    url: "https://www.segmentify.com/wp-content/uploads/2020/12/segmentify-logo.png",
       *    thumbnailHidden: false
       *  }
       * ]
       */
      attachments?: [
        {
          url: string;
          thumbnailHidden: boolean;
        }
      ];
    };
    android?: {
      /**
       * channelId is the channel id of the notification.
       * @example
       * "234234234-23423423423"
       */
      channelId: string;
      /**
       * smallIcon is the small icon of the notification.
       * @example
       * "ic_launcher"
       */
      smallIcon: string;
      pressAction?: {
        /**
         * id is the id of the notification.
         * @default
         * "Segmentify"
         */
        id: string;
        /**
         * launchActivity is the launch activity of the notification.
         * @default
         * "default"
         */
        launchActivity: string;
      };
    };
  };
}
